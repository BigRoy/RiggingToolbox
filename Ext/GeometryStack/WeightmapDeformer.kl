/*
 *  Copyright 2010-2014 Fabric Engine Inc. All rights reserved.
 */

require Math;
require Geometry;


object WeightmapDeformer : PolygonMeshDeformer {
	Weightmap weightmaps[];
	String weightmapName;
};

function String[] WeightmapDeformer.getRequiredAttributes(){
	String result[];
	result.push('positions');
	return result;
}

function String[] WeightmapDeformer.getModifiedAttributes(){
	String result[];
	result.push(this.weightmapName);
	return result;
}

/// Return true if the generation of the geometries is expensive and the results should be cached.
function Boolean WeightmapDeformer.cacheResults(){
	// Teh weightmap does not need to bac cached 
	return false;
}


/// Per-geometry computation of the push. 
/// \internal
operator WeightmapDeformer_connectWeightmaps<<<index>>>(
  io GeometrySet geomSet,
  io Weightmap weightmaps[],
  String weightmapName
){	
	PolygonMesh mesh = geomSet.get(index);
	if(mesh && !weightmaps[index]){
		weightmaps[index] = Weightmap();
		weightmaps[index].setName(weightmapName);
		weightmaps[index].connect(mesh, Xfo());
	}
}


function WeightmapDeformer.evaluate(EvalContext context, io GeometrySet geomSet){

  Ref<WrapDeformer> io_this = this;
  WeightmapDeformer_connectWeightmaps<<<geomSet.size()>>>(geomSet, io_this.weightmaps, this.weightmapName);
}


