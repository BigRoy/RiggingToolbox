/*
 *  Copyright 2010-2014 Fabric Engine Inc. All rights reserved.
 */

require Math;
require Geometry;

const UInt32 AttrMode_Read = 0;
const UInt32 AttrMode_Write = 1;
const UInt32 AttrMode_ReadWrite = 2;


/**
  A GeometryOperator is can generate or modify geomety in the geometry stack.
  The GeometryStack manages a sequence of these operators, evalauting and caching thier results during scene playback. 

  \seealso GeometryOperator, RiggingToolboxRegistry, GeometryStack
*/
interface GeometryOperator {
  
  // returns the list of attributes that the geomery operator is dependnt on in some way. 
  UInt32[String] getAttributeInteractions();
  
  Boolean cacheResults();

  evaluate!(EvalContext context, io GeometrySet geomSet);

  JSONDictValue saveJSON(PersistenceContext persistenceContext);

  loadJSON!(PersistenceContext persistenceContext, JSONDictValue json);

  String getDesc(String indent);
};


/**
  A GeometryOperatorFactory is responsible to constructing GeometryOperators/
  For each type of geometry operator, we have a factory object 
  that is constructed and registered in the RiggingToolboxRegistry.
  This enables the RiggingToolboxRegistry to construct any operator
  as it loads. 

  \example

    require Geometry;

    object MyGeomOp : GeometryOperator {
      Scalar data;
    };


    object MyGeomOpFactory : GeometryOperatorFactory {
    };

    function GeometryOperator MyGeomOpFactory.constructGeometryOperator(){
      MyGeomOp geomOp();
      return geomOp;
    }

  \endexample

  \seealso GeometryOperatorFactory, RiggingToolboxRegistry, GeometryStack
*/
interface GeometryOperatorFactory {
  GeometryOperator constructGeometryOperator();
};
