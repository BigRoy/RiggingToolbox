/*
 *  Copyright 2010-2014 Fabric Engine Inc. All rights reserved.
 */

require Math;
require Geometry;

object PolygonMeshSphereGenerator : BaseGenerator {
  Scalar radius;
  UInt32 detail;
  Boolean uvs;
  Boolean normals;

  Boolean enableCaching;// Used to debug the caching system.
};

function PolygonMeshSphereGenerator(){
  this.radius = 3.0;
  this.detail = 4;
  this.uvs = true;
  this.normals = true;
}

function PolygonMeshSphereGenerator(Scalar radius, UInt32 detail, Boolean setNormals, Boolean setUVs){
  this.radius = radius;
  this.detail = detail;
  this.uvs = setNormals;
  this.normals = setUVs;
}

function String[] PolygonMeshSphereGenerator.getModifiedAttributes(){
	String result[];
	result.push('positions');
	if(this.normals)
		result.push('normals');
	if(this.uvs)
		result.push('uvs');
	return result;
}


function Boolean PolygonMeshSphereGenerator.cacheResults(){
  return this.enableCaching;
}

function PolygonMeshSphereGenerator.evaluate(EvalContext context, io Geometry geometries[]){
  report("PolygonMeshSphereGenerator.evaluate:" + context);
  geometries.resize(1);
  PolygonMesh mesh();
  mesh.debugName = "Sphere";
  mesh.addSphere(Xfo(), this.radius, this.detail, this.normals, this.uvs);
  geometries[0] = mesh;
}


