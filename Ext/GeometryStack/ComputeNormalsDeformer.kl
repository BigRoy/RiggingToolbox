/*
 *  Copyright 2010-2014 Fabric Engine Inc. All rights reserved.
 */

require Math;
require Geometry;


object ComputeNormalsDeformer : BaseDeformer {
	Scalar hardAngleRadians;
};

function String[] ComputeNormalsDeformer.getRequiredAttributes(){
	String result[];
	result.push('positions');
	result.push('normals');
	return result;
}

function String[] ComputeNormalsDeformer.getModifiedAttributes(){
	String result[];
	result.push('positions');
	return result;
}

/// Per-geometry computation of the push. 
/// \internal
operator ComputeNormalsDeformer_deformGeometries<<<index>>>(
  io GeometrySet geomSet,
  Scalar hardAngleRadians
){
	PolygonMesh mesh = geomSet.get(index);
	if(mesh)
		mesh.recomputePointNormalsIfRequired( hardAngleRadians );
}

function ComputeNormalsDeformer.evaluate(EvalContext context, io GeometrySet geomSet){
  ComputeNormalsDeformer_deformGeometries<<<geomSet.size()>>>(geomSet, this.hardAngleRadians);
}


