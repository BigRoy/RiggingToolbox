/*
 *  Copyright 2010-2014 Fabric Engine Inc. All rights reserved.
 */

require Math;
require Geometry;


object ComputeNormalsModifier : BaseModifier {
  Scalar hardAngleRadians;
};

function String[] ComputeNormalsModifier.getRequiredAttributes(){
  String result[];
  result.push('positions');
  return result;
}

function String[] ComputeNormalsModifier.getModifiedAttributes(){
  String result[];
  result.push('normals');
  return result;
}

/// Per-geometry computation of the push. 
/// \internal
operator computeNormalsModifier_deformGeometries<<<index>>>(
  io GeometrySet geomSet,
  Scalar hardAngleRadians
){
  PolygonMesh mesh = geomSet.get(index);
  if(mesh)
    mesh.recomputePointNormalsIfRequired( hardAngleRadians );
}

function ComputeNormalsModifier.evaluate(EvalContext context, io GeometrySet geomSet){
  computeNormalsModifier_deformGeometries<<<geomSet.size()>>>(geomSet, this.hardAngleRadians);
}


