/*
 *  Copyright 2010-2014 Fabric Engine Inc. All rights reserved.
 */

require Math;
require Geometry;
require Manipulation;


//////////////////////////////////////
// Factory definition.

object WeightmapModifierFactory : GeometryOperatorFactory {
};

function GeometryOperator WeightmapModifierFactory.constructGeometryOperator(){
  WeightmapModifier geomOp();
  return geomOp;
}


//////////////////////////////////////
//


object WeightmapModifier : BaseModifier {
  Weightmap weightmaps[];
  String weightmapName;
  UInt32 boundVersion;
};


function UInt32[String] WeightmapModifier.getAttributeInteractions(){
  UInt32 result[String];
  result['positions'] = AttrMode_Read;
  result[this.weightmapName] = AttrMode_Write;
  return result;
}

/// Per-geometry setup of the weightmap
/// \internal
operator weightmapModifier_connectWeightmaps<<<index>>>(
  io GeometrySet geomSet,
  io Weightmap weightmaps[],
  String weightmapName
){
  PolygonMesh mesh = geomSet.get(index);
  if(mesh != null && weightmaps[index] == null){
    weightmaps[index] = Weightmap();
    weightmaps[index].setName(weightmapName);
    weightmaps[index].connect(mesh, Xfo());
  }
}


function WeightmapModifier.evaluate!(EvalContext context, io GeometrySet geomSet){
  AutoProfilingEvent p(FUNC);

  if(geomSet.getVersion() != this.boundVersion){
    this.weightmaps.resize(geomSet.size());
    this.boundVersion = geomSet.getVersion();
  }

  weightmapModifier_connectWeightmaps<<<geomSet.size()>>>(geomSet, this.weightmaps, this.weightmapName);
}



function JSONDictValue WeightmapModifier.saveJSON(PersistenceContext persistenceContext){
  JSONDictValue json = this.parent#saveJSON(persistenceContext);
  json.setBoolean('weightmapName', this.weightmapName);
  return json;
}

function WeightmapModifier.loadJSON!(PersistenceContext persistenceContext, JSONDictValue json){
  this.parent#loadJSON(persistenceContext, json);
  if(json.has('weightmapName'))
    this.weightmapName = json.getBoolean('weightmapName');
}


