
require RiggingToolbox;


inline __compile_Vec3Attribute_copyFrom() { Vec3 a[]; Vec3 b[]; Vec3Attribute_copyFrom<<<1@true>>>(a, b); }
inline __compile_pushModifier_pushPositionsAlongNormals() { Vec3 a[]; Vec3 b[]; Scalar c; pushModifier_pushPositionsAlongNormals<<<1@true>>>(a, b, c); }

operator entry(){
    
  GeometryStack stack();
  PolygonMeshSphereGenerator sphereGenerator(2.0, 1, true, true);
  PushModifier pushModifier(3.0);
  stack.addGeometryOperator(sphereGenerator);
  stack.addGeometryOperator(pushModifier);

  EvalContext context();
  {
    GeometrySet geomSet = stack.evaluate(context);

    geomSet.convertToCPU();
    report("NumGeometries:" + geomSet.size);
    for(Integer i=0; i<geomSet.size; i++){
      report(geomSet.get(i).getDesc(true, true));
    }
  }
  
  {
    GeometrySet geomSet = stack.evaluate(context);

    geomSet.convertToCPU();
    report("NumGeometries:" + geomSet.size);
    for(Integer i=0; i<geomSet.size; i++){
      report(geomSet.get(i).getDesc(true, true));
    }
  }
}

