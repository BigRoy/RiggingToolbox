
require RiggingToolbox;

inline __compile_Vec3Attribute_copyFrom() { Vec3 a[]; Vec3 b[]; Vec3Attribute_copyFrom<<<1@true>>>(a, b); }
inline __compile_SkinningAttribute_copyFrom() { SkinningAttributeDataUnion a; SkinningAttributeDataUnion b; SkinningAttribute_copyFrom<<<1@true>>>(a, b); }
inline __compile_skinningModifier_skinMeshPositions() { 
  PolygonMeshDataUnion a; Vec3 b<>; SkinningAttributeDataUnion d; Mat44 e[]; skinningModifier_skinMeshPositions<<<1@true>>>(a, b, d, e); 
}
inline __compile_skinningModifier_skinMeshPositionsAndNormals() { 
  PolygonMeshDataUnion a; Vec3 b<>; Vec3 c<>; SkinningAttributeDataUnion d; Mat44 e[]; skinningModifier_skinMeshPositionsAndNormals<<<1@true>>>(a, b, c, d, e); 
}


operator entry(){

  StartFabricProfiling();

  GeometryStack stack();

  AlembicSkinnedMeshGeometryGenerator alembicGenerator();
  SkinningModifier skiningModifier();
  stack.addGeometryOperator(alembicGenerator);
  stack.addGeometryOperator(skiningModifier);

  alembicGenerator.setFilePath("${FABRIC_RIGGINGTOOLBOX_PATH}/Tests/GeometryStack/Resources/skinnedTube.abc");

  String geometryNames[];
  geometryNames.push("pCylinderShape1");
  alembicGenerator.setGeometryNames(geometryNames);

  EvalContext context();
  GeometrySet geomSet = stack.evaluate(context);

  // Modify the pose and then reevaluate. 
  Mat44 pose[];
  pose.resize(2);
  pose[0] = Xfo(Vec3(3, 4, 5)).toMat44();
  pose[1] = Xfo(Vec3(10, 20, 5)).toMat44();
  skiningModifier.setPose(pose);

  stack.evaluate(context);

  StopFabricProfiling();

  report( GetEvalPathReport() );
}

